{"version":3,"sources":["app/views/ui-kits/pagination/AppPagination.jsx","../../react_components/index.js","../../react_components/PaginationBoxView.js","../../react_components/PageView.js","../../react_components/BreakView.js"],"names":["AppPagination","state","handlePageClick","data","pageNumber","selected","console","log","routeSegments","name","path","className","title","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","this","containerClassName","subContainerClassName","activeClassName","initialPage","Component","PaginationBoxView","evt","selectedItem","items","breakLinkClassName","index","leftSide","rightSide","page","breakView","createPageView","key","onClick","initialSelected","props","disableInitialCallback","extraAriaContext","prevProps","forcePage","forwardJump","backwardJump","pageIndex","hrefBuilder","ariaLabelBuilder","label","pageClassName","pageLinkClassName","activeLinkClassName","handlePageSelected","bind","href","ariaLabel","disabledClassName","previousClassName","nextClassName","previousLinkClassName","nextLinkClassName","previousClasses","nextClasses","previousAriaDisabled","nextAriaDisabled","tabIndex","role","onKeyPress","aria-disabled","propTypes","PropTypes","func","defaultProps","PageView","ariaCurrent","aria-label","aria-current","isRequired","BreakView"],"mappings":"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","file":"static/js/65.789d4b74.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Breadcrumb } from \"@gull\";\nimport ReactPaginate from \"react-paginate\";\nimport SimpleCard from \"@gull/components/cards/SimpleCard\";\n\nclass AppPagination extends Component {\n  state = {};\n\n  handlePageClick = data => {\n    let pageNumber = data.selected;\n    console.log(pageNumber);\n  };\n\n  render() {\n    return (\n      <div>\n        <Breadcrumb\n          routeSegments={[\n            { name: \"UI Kits\", path: \"/uikits\" },\n            { name: \"Pagination\" }\n          ]}\n        ></Breadcrumb>\n\n        <div className=\"row\">\n          <div className=\"col-md-6 col-sm-12 mb-4\">\n            <p>\n              use a large block of connected links for our pagination, making\n              links hard to miss and easily scalableâ€”all while providing large\n              hit areas. Pagination is built with list HTML elements so screen\n              readers can announce the number of available links. Use a wrapping\n              <code>nav</code> element to identify it as a navigation section to\n              screen readers and other assistive technologies.\n            </p>\n          </div>\n        </div>\n\n        <div className=\"row mb-4\">\n          <div className=\"col-lg-4 col-md-4 col-sm-12 mb-4\">\n            <SimpleCard title=\"Basic pagination\">\n              <ReactPaginate\n                previousLabel={\"Previous\"}\n                nextLabel={\"Next\"}\n                breakLabel={\"...\"}\n                breakClassName={\"break-me\"}\n                pageCount={5}\n                marginPagesDisplayed={2}\n                pageRangeDisplayed={5}\n                onPageChange={this.handlePageClick}\n                containerClassName={\"pagination\"}\n                subContainerClassName={\"pages pagination\"}\n                activeClassName={\"active\"}\n              />\n            </SimpleCard>\n          </div>\n          <div className=\"col-lg-4 col-md-4 col-sm-12 mb-4\">\n            <SimpleCard title=\"pagination with icons\">\n              <ReactPaginate\n                previousLabel={<i className=\"i-Previous\"></i>}\n                nextLabel={<i className=\"i-Next1\"></i>}\n                breakLabel={\"...\"}\n                breakClassName={\"break-me\"}\n                pageCount={5}\n                marginPagesDisplayed={2}\n                pageRangeDisplayed={5}\n                onPageChange={this.handlePageClick}\n                containerClassName={\"pagination\"}\n                subContainerClassName={\"pages pagination\"}\n                activeClassName={\"active\"}\n              />\n            </SimpleCard>\n          </div>\n          <div className=\"col-lg-4 col-md-4 col-sm-12 mb-4\">\n            <SimpleCard title=\"Pagination With initial state\">\n              <ReactPaginate\n                previousLabel={\"Previous\"}\n                nextLabel={\"Next\"}\n                breakLabel={\"...\"}\n                breakClassName={\"break-me\"}\n                pageCount={5}\n                marginPagesDisplayed={2}\n                pageRangeDisplayed={5}\n                initialPage={2}\n                onPageChange={this.handlePageClick}\n                containerClassName={\"pagination\"}\n                subContainerClassName={\"pages pagination\"}\n                activeClassName={\"active\"}\n              />\n            </SimpleCard>\n          </div>\n          <div className=\"col-md-6 col-sm-12 mb-4\">\n            <SimpleCard title=\"large pagination\">\n              <ReactPaginate\n                previousLabel={\"Previous\"}\n                nextLabel={\"Next\"}\n                breakLabel={\"...\"}\n                breakClassName={\"break-me\"}\n                pageCount={5}\n                marginPagesDisplayed={2}\n                pageRangeDisplayed={5}\n                onPageChange={this.handlePageClick}\n                containerClassName={\"pagination pagination-lg\"}\n                subContainerClassName={\"pages pagination\"}\n                activeClassName={\"active\"}\n              />\n            </SimpleCard>\n          </div>\n          <div className=\"col-md-6 col-sm-12 mb-4\">\n            <SimpleCard title=\"small pagination\">\n              <ReactPaginate\n                previousLabel={\"Previous\"}\n                nextLabel={\"Next\"}\n                breakLabel={\"...\"}\n                breakClassName={\"break-me\"}\n                pageCount={5}\n                marginPagesDisplayed={2}\n                pageRangeDisplayed={5}\n                onPageChange={this.handlePageClick}\n                containerClassName={\"pagination pagination-sm\"}\n                subContainerClassName={\"pages pagination\"}\n                activeClassName={\"active\"}\n              />\n            </SimpleCard>\n          </div>\n          <div className=\"col-lg-4 col-md-4 col-sm-12 mb-4\">\n            <SimpleCard title=\"pagination align left\">\n              <div className=\"d-flex justify-content-start\">\n                <ReactPaginate\n                  previousLabel={\"Previous\"}\n                  nextLabel={\"Next\"}\n                  breakLabel={\"...\"}\n                  breakClassName={\"break-me\"}\n                  pageCount={5}\n                  marginPagesDisplayed={2}\n                  pageRangeDisplayed={5}\n                  onPageChange={this.handlePageClick}\n                  containerClassName={\"pagination\"}\n                  subContainerClassName={\"pages pagination\"}\n                  activeClassName={\"active\"}\n                />\n              </div>\n            </SimpleCard>\n          </div>\n          <div className=\"col-lg-4 col-md-4 col-sm-12 mb-4\">\n            <SimpleCard title=\"pagination align center\">\n              <div className=\"d-flex justify-content-center\">\n                <ReactPaginate\n                  previousLabel={\"Previous\"}\n                  nextLabel={\"Next\"}\n                  breakLabel={\"...\"}\n                  breakClassName={\"break-me\"}\n                  pageCount={5}\n                  marginPagesDisplayed={2}\n                  pageRangeDisplayed={5}\n                  onPageChange={this.handlePageClick}\n                  containerClassName={\"pagination\"}\n                  subContainerClassName={\"pages pagination\"}\n                  activeClassName={\"active\"}\n                />\n              </div>\n            </SimpleCard>\n          </div>\n          <div className=\"col-lg-4 col-md-4 col-sm-12 mb-4\">\n            <SimpleCard title=\"pagination align right\">\n              <div className=\"d-flex justify-content-end\">\n                <ReactPaginate\n                  previousLabel={\"Previous\"}\n                  nextLabel={\"Next\"}\n                  breakLabel={\"...\"}\n                  breakClassName={\"break-me\"}\n                  pageCount={5}\n                  marginPagesDisplayed={2}\n                  pageRangeDisplayed={5}\n                  onPageChange={this.handlePageClick}\n                  containerClassName={\"pagination\"}\n                  subContainerClassName={\"pages pagination\"}\n                  activeClassName={\"active\"}\n                />\n              </div>\n            </SimpleCard>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AppPagination;\n","import PaginationBoxView from './PaginationBoxView';\n\nexport default PaginationBoxView;\n","'use strict';\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport PageView from './PageView';\nimport BreakView from './BreakView';\n\nexport default class PaginationBoxView extends Component {\n  static propTypes = {\n    pageCount: PropTypes.number.isRequired,\n    pageRangeDisplayed: PropTypes.number.isRequired,\n    marginPagesDisplayed: PropTypes.number.isRequired,\n    previousLabel: PropTypes.node,\n    nextLabel: PropTypes.node,\n    breakLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n    hrefBuilder: PropTypes.func,\n    onPageChange: PropTypes.func,\n    initialPage: PropTypes.number,\n    forcePage: PropTypes.number,\n    disableInitialCallback: PropTypes.bool,\n    containerClassName: PropTypes.string,\n    pageClassName: PropTypes.string,\n    pageLinkClassName: PropTypes.string,\n    activeClassName: PropTypes.string,\n    activeLinkClassName: PropTypes.string,\n    previousClassName: PropTypes.string,\n    nextClassName: PropTypes.string,\n    previousLinkClassName: PropTypes.string,\n    nextLinkClassName: PropTypes.string,\n    disabledClassName: PropTypes.string,\n    breakClassName: PropTypes.string,\n    breakLinkClassName: PropTypes.string,\n    extraAriaContext: PropTypes.string,\n    ariaLabelBuilder: PropTypes.func,\n  };\n\n  static defaultProps = {\n    pageCount: 10,\n    pageRangeDisplayed: 2,\n    marginPagesDisplayed: 3,\n    activeClassName: 'selected',\n    previousClassName: 'previous',\n    nextClassName: 'next',\n    previousLabel: 'Previous',\n    nextLabel: 'Next',\n    breakLabel: '...',\n    disabledClassName: 'disabled',\n    disableInitialCallback: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    let initialSelected;\n    if (props.initialPage) {\n      initialSelected = props.initialPage;\n    } else if (props.forcePage) {\n      initialSelected = props.forcePage;\n    } else {\n      initialSelected = 0;\n    }\n\n    this.state = {\n      selected: initialSelected,\n    };\n  }\n\n  componentDidMount() {\n    const {\n      initialPage,\n      disableInitialCallback,\n      extraAriaContext,\n    } = this.props;\n    // Call the callback with the initialPage item:\n    if (typeof initialPage !== 'undefined' && !disableInitialCallback) {\n      this.callCallback(initialPage);\n    }\n\n    if (extraAriaContext) {\n      console.warn(\n        'DEPRECATED (react-paginate): The extraAriaContext prop is deprecated. You should now use the ariaLabelBuilder instead.'\n      );\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      typeof this.props.forcePage !== 'undefined' &&\n      this.props.forcePage !== prevProps.forcePage\n    ) {\n      this.setState({ selected: this.props.forcePage });\n    }\n  }\n\n  handlePreviousPage = evt => {\n    const { selected } = this.state;\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n    if (selected > 0) {\n      this.handlePageSelected(selected - 1, evt);\n    }\n  };\n\n  handleNextPage = evt => {\n    const { selected } = this.state;\n    const { pageCount } = this.props;\n\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n    if (selected < pageCount - 1) {\n      this.handlePageSelected(selected + 1, evt);\n    }\n  };\n\n  handlePageSelected = (selected, evt) => {\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n\n    if (this.state.selected === selected) return;\n\n    this.setState({ selected: selected });\n\n    // Call the callback with the new selected item:\n    this.callCallback(selected);\n  };\n\n  getForwardJump() {\n    const { selected } = this.state;\n    const { pageCount, pageRangeDisplayed } = this.props;\n\n    const forwardJump = selected + pageRangeDisplayed;\n    return forwardJump >= pageCount ? pageCount - 1 : forwardJump;\n  }\n\n  getBackwardJump() {\n    const { selected } = this.state;\n    const { pageRangeDisplayed } = this.props;\n\n    const backwardJump = selected - pageRangeDisplayed;\n    return backwardJump < 0 ? 0 : backwardJump;\n  }\n\n  handleBreakClick = (index, evt) => {\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n\n    const { selected } = this.state;\n\n    this.handlePageSelected(\n      selected < index ? this.getForwardJump() : this.getBackwardJump(),\n      evt\n    );\n  };\n\n  hrefBuilder(pageIndex) {\n    const { hrefBuilder, pageCount } = this.props;\n    if (\n      hrefBuilder &&\n      pageIndex !== this.state.selected &&\n      pageIndex >= 0 &&\n      pageIndex < pageCount\n    ) {\n      return hrefBuilder(pageIndex + 1);\n    }\n  }\n\n  ariaLabelBuilder(pageIndex) {\n    const selected = pageIndex === this.state.selected;\n    if (\n      this.props.ariaLabelBuilder &&\n      pageIndex >= 0 &&\n      pageIndex < this.props.pageCount\n    ) {\n      let label = this.props.ariaLabelBuilder(pageIndex + 1, selected);\n      // DEPRECATED: The extraAriaContext prop was used to add additional context\n      // to the aria-label. Users should now use the ariaLabelBuilder instead.\n      if (this.props.extraAriaContext && !selected) {\n        label = label + ' ' + this.props.extraAriaContext;\n      }\n      return label;\n    }\n  }\n\n  callCallback = selectedItem => {\n    if (\n      typeof this.props.onPageChange !== 'undefined' &&\n      typeof this.props.onPageChange === 'function'\n    ) {\n      this.props.onPageChange({ selected: selectedItem });\n    }\n  };\n\n  getPageElement(index) {\n    const { selected } = this.state;\n    const {\n      pageClassName,\n      pageLinkClassName,\n      activeClassName,\n      activeLinkClassName,\n      extraAriaContext,\n    } = this.props;\n\n    return (\n      <PageView\n        key={index}\n        onClick={this.handlePageSelected.bind(null, index)}\n        selected={selected === index}\n        pageClassName={pageClassName}\n        pageLinkClassName={pageLinkClassName}\n        activeClassName={activeClassName}\n        activeLinkClassName={activeLinkClassName}\n        extraAriaContext={extraAriaContext}\n        href={this.hrefBuilder(index)}\n        ariaLabel={this.ariaLabelBuilder(index)}\n        page={index + 1}\n      />\n    );\n  }\n\n  pagination = () => {\n    const items = [];\n    const {\n      pageRangeDisplayed,\n      pageCount,\n      marginPagesDisplayed,\n      breakLabel,\n      breakClassName,\n      breakLinkClassName,\n    } = this.props;\n\n    const { selected } = this.state;\n\n    if (pageCount <= pageRangeDisplayed) {\n      for (let index = 0; index < pageCount; index++) {\n        items.push(this.getPageElement(index));\n      }\n    } else {\n      let leftSide = pageRangeDisplayed / 2;\n      let rightSide = pageRangeDisplayed - leftSide;\n\n      // If the selected page index is on the default right side of the pagination,\n      // we consider that the new right side is made up of it (= only one break element).\n      // If the selected page index is on the default left side of the pagination,\n      // we consider that the new left side is made up of it (= only one break element).\n      if (selected > pageCount - pageRangeDisplayed / 2) {\n        rightSide = pageCount - selected;\n        leftSide = pageRangeDisplayed - rightSide;\n      } else if (selected < pageRangeDisplayed / 2) {\n        leftSide = selected;\n        rightSide = pageRangeDisplayed - leftSide;\n      }\n\n      let index;\n      let page;\n      let breakView;\n      let createPageView = index => this.getPageElement(index);\n\n      for (index = 0; index < pageCount; index++) {\n        page = index + 1;\n\n        // If the page index is lower than the margin defined,\n        // the page has to be displayed on the left side of\n        // the pagination.\n        if (page <= marginPagesDisplayed) {\n          items.push(createPageView(index));\n          continue;\n        }\n\n        // If the page index is greater than the page count\n        // minus the margin defined, the page has to be\n        // displayed on the right side of the pagination.\n        if (page > pageCount - marginPagesDisplayed) {\n          items.push(createPageView(index));\n          continue;\n        }\n\n        // If the page index is near the selected page index\n        // and inside the defined range (pageRangeDisplayed)\n        // we have to display it (it will create the center\n        // part of the pagination).\n        if (index >= selected - leftSide && index <= selected + rightSide) {\n          items.push(createPageView(index));\n          continue;\n        }\n\n        // If the page index doesn't meet any of the conditions above,\n        // we check if the last item of the current \"items\" array\n        // is a break element. If not, we add a break element, else,\n        // we do nothing (because we don't want to display the page).\n        if (breakLabel && items[items.length - 1] !== breakView) {\n          breakView = (\n            <BreakView\n              key={index}\n              breakLabel={breakLabel}\n              breakClassName={breakClassName}\n              breakLinkClassName={breakLinkClassName}\n              onClick={this.handleBreakClick.bind(null, index)}\n            />\n          );\n          items.push(breakView);\n        }\n      }\n    }\n\n    return items;\n  };\n\n  render() {\n    const {\n      disabledClassName,\n      previousClassName,\n      nextClassName,\n      pageCount,\n      containerClassName,\n      previousLinkClassName,\n      previousLabel,\n      nextLinkClassName,\n      nextLabel,\n    } = this.props;\n\n    const { selected } = this.state;\n\n    const previousClasses =\n      previousClassName + (selected === 0 ? ` ${disabledClassName}` : '');\n    const nextClasses =\n      nextClassName +\n      (selected === pageCount - 1 ? ` ${disabledClassName}` : '');\n\n    const previousAriaDisabled = selected === 0 ? 'true' : 'false';\n    const nextAriaDisabled = selected === pageCount - 1 ? 'true' : 'false';\n\n    return (\n      <ul className={containerClassName}>\n        <li className={previousClasses}>\n          <a\n            onClick={this.handlePreviousPage}\n            className={previousLinkClassName}\n            href={this.hrefBuilder(selected - 1)}\n            tabIndex=\"0\"\n            role=\"button\"\n            onKeyPress={this.handlePreviousPage}\n            aria-disabled={previousAriaDisabled}\n          >\n            {previousLabel}\n          </a>\n        </li>\n\n        {this.pagination()}\n\n        <li className={nextClasses}>\n          <a\n            onClick={this.handleNextPage}\n            className={nextLinkClassName}\n            href={this.hrefBuilder(selected + 1)}\n            tabIndex=\"0\"\n            role=\"button\"\n            onKeyPress={this.handleNextPage}\n            aria-disabled={nextAriaDisabled}\n          >\n            {nextLabel}\n          </a>\n        </li>\n      </ul>\n    );\n  }\n}\n","'use strict';\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst PageView = props => {\n  let pageClassName = props.pageClassName;\n  let pageLinkClassName = props.pageLinkClassName;\n\n  const onClick = props.onClick;\n  const href = props.href;\n  let ariaLabel =\n    props.ariaLabel ||\n    'Page ' +\n      props.page +\n      (props.extraAriaContext ? ' ' + props.extraAriaContext : '');\n  let ariaCurrent = null;\n\n  if (props.selected) {\n    ariaCurrent = 'page';\n\n    ariaLabel =\n      props.ariaLabel || 'Page ' + props.page + ' is your current page';\n\n    if (typeof pageClassName !== 'undefined') {\n      pageClassName = pageClassName + ' ' + props.activeClassName;\n    } else {\n      pageClassName = props.activeClassName;\n    }\n\n    if (typeof pageLinkClassName !== 'undefined') {\n      if (typeof props.activeLinkClassName !== 'undefined') {\n        pageLinkClassName = pageLinkClassName + ' ' + props.activeLinkClassName;\n      }\n    } else {\n      pageLinkClassName = props.activeLinkClassName;\n    }\n  }\n\n  return (\n    <li className={pageClassName}>\n      <a\n        onClick={onClick}\n        role=\"button\"\n        className={pageLinkClassName}\n        href={href}\n        tabIndex=\"0\"\n        aria-label={ariaLabel}\n        aria-current={ariaCurrent}\n        onKeyPress={onClick}\n      >\n        {props.page}\n      </a>\n    </li>\n  );\n};\n\nPageView.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  selected: PropTypes.bool.isRequired,\n  pageClassName: PropTypes.string,\n  pageLinkClassName: PropTypes.string,\n  activeClassName: PropTypes.string,\n  activeLinkClassName: PropTypes.string,\n  extraAriaContext: PropTypes.string,\n  href: PropTypes.string,\n  ariaLabel: PropTypes.string,\n  page: PropTypes.number.isRequired,\n};\n\nexport default PageView;\n","'use strict';\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst BreakView = props => {\n  const { breakLabel, breakClassName, breakLinkClassName, onClick } = props;\n  const className = breakClassName || 'break';\n\n  return (\n    <li className={className}>\n      <a\n        className={breakLinkClassName}\n        onClick={onClick}\n        role=\"button\"\n        tabIndex=\"0\"\n        onKeyPress={onClick}\n      >\n        {breakLabel}\n      </a>\n    </li>\n  );\n};\n\nBreakView.propTypes = {\n  breakLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  breakClassName: PropTypes.string,\n  breakLinkClassName: PropTypes.string,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default BreakView;\n"],"sourceRoot":""}