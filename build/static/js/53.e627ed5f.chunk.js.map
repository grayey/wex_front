{"version":3,"sources":["app/views/sessions/Signin.jsx","../node_modules/react-bootstrap/esm/createChainedFunction.js","../node_modules/react-bootstrap/esm/SafeAnchor.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/react-bootstrap/esm/Button.js","app/environment/environment.js","app/services/apiService.js","app/services/appMainService.js","app/appNotifications.jsx"],"names":["SigninSchema","yup","shape","email","required","password","min","Signin","props","state","navigate","isSubmitting","handleChange","event","persist","setState","target","name","value","handleSubmit","eUKey","isEmail","loginObject","appMainService","logUserIn","then","userResponse","console","log","catch","error","errorNotification","type","msg","utils","AppNotification","text","match","AppMainService","className","style","backgroundColor","this","public","src","alt","initialValues","validationSchema","onSubmit","values","errors","touched","handleBlur","htmlFor","onChange","onBlur","to","backgroundSize","backgroundImage","Component","connect","loginWithEmailAndPassword","PropTypes","func","isRequired","user","createChainedFunction","_len","arguments","length","funcs","Array","_key","filter","f","reduce","acc","Error","_len2","args","_key2","apply","isTrivialHref","href","trim","SafeAnchor","React","forwardRef","_ref","ref","_ref$as","as","disabled","onKeyDown","_objectWithoutPropertiesLoose","handleClick","onClick","preventDefault","stopPropagation","role","tabIndex","createElement","_extends","key","displayName","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","done","Promise","_asyncToGenerator","fn","self","err","undefined","Button","bsPrefix","variant","size","active","block","prefix","useBootstrapPrefix","classes","classNames","defaultProps","env","process","app_mode","BASE_URL","development","base_url","base_url_front","production","get","url","a","id","path","axios","response","data","jsonData","message","requestStatus","statusCode","post","errorResponse","put","del","delete","apiService","userData","_id","status","updateUser","userSlug","roleData","updateRole","roleSlug","categoryData","category","updateCategory","notificationType","timeOut","title","NotificationManager"],"mappings":"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","file":"static/js/53.e627ed5f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport { loginWithEmailAndPassword } from \"app/redux/actions/LoginActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\nimport AppMainService from \"../../services/appMainService\";\nimport AppNotification from \"../../appNotifications\";\nimport * as utils from \"@utils\";\n\n\n\n\n\nconst SigninSchema = yup.object().shape({\n  email: yup\n    .string()\n    .required(\"username or email is required\"),\n  password: yup\n    .string()\n    .min(8, \"Password must be 8 character long\")\n    .required(\"password is required\")\n});\n\nclass Signin extends Component {\n\n  appMainService;\n\n  constructor(props) {\n    super(props)\n    this.appMainService = new AppMainService();\n\n  }\n\n\n  state = {\n    email: \"\",\n    password: \"\",\n    navigate:false,\n    isSubmitting:false\n  };\n\n \n\n\n  handleChange = event => {\n    event.persist();\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSubmit = (value) => {\n\n    let {isSubmitting} = this.state;\n    isSubmitting = !isSubmitting;\n    this.setState({isSubmitting});\n    const {email, password} = value;\n    const eUKey = this.isEmail(email) ? \"email\":\"username\";\n    const loginObject = {\n      [eUKey]:email,\n      password\n    }\n    this.appMainService.logUserIn(loginObject).then(\n      (userResponse)=>{\n        isSubmitting = !isSubmitting;\n        this.setState({isSubmitting})\n          // const allRoles = userResponse;\n          // this.setState({ allRoles, isSubmitting })\n\n          // this.props.loginWithEmailAndPassword(value);\n    // window.location.replace('http://localhost:3000/dashboard/v1')\n    // this.setState({navigate:true})\n          console.log('userResponse', userResponse)\n      }\n  ).catch((error)=>{\n      this.setState({isSubmitting})\n      const errorNotification = {\n          type:'error',\n          msg:utils.processErrors(error)\n      }\n      new AppNotification(errorNotification)\n      \n  })\n\n    \n    \n  };\n\n  isEmail = (text) =>{\n\n    const mailFormat = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n    return text.match(mailFormat)\n\n  }\n\n  render() {\n    return (\n      <div\n        className=\"auth-layout-wrap\"\n        style={{\n          // backgroundImage: \"url(/assets/images/photo-wide-4.jpg)\"\n          backgroundColor:\"transparent !important\"\n        }}\n      >\n        <div className=\"auth-content\">\n          <div className={`${this.props?.public ? \"cardx\" : \"card\"} o-hidden`} >\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                <div className=\"p-4\">\n                  <div className=\"auth-logo text-center mb-4\">\n                    <img src=\"/assets/images/logo.png\" alt=\"\" />\n                  </div>\n                  <h1 className=\"mb-3 text-18\">Sign In</h1>\n                  <Formik\n                    initialValues={this.state}\n                    validationSchema={SigninSchema}\n                    onSubmit={this.handleSubmit}\n                  >\n                    {({\n                      values,\n                      errors,\n                      touched,\n                      handleChange,\n                      handleBlur,\n                      handleSubmit,\n                      isSubmitting\n                    }) => (\n                      <form onSubmit={handleSubmit}>\n                        <div className=\"form-group\">\n                          <label htmlFor=\"email\">Username <b>OR</b> Email</label>\n                          <input\n                            className=\"form-control form-control-rounded position-relative\"\n                            type=\"text\"\n                            name=\"email\"\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.email}\n                          />\n                          {errors.email && (\n                            <div className=\"text-danger mt-1 ml-2\">\n                              {errors.email}\n                            </div>\n                          )}\n                        </div>\n                        <div className=\"form-group\">\n                          <label htmlFor=\"password\">Password</label>\n                          <input\n                            className=\"form-control form-control-rounded\"\n                            type=\"password\"\n                            name=\"password\"\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.password}\n                          />\n                          {errors.password && (\n                            <div className=\"text-danger mt-1 ml-2\">\n                              {errors.password}\n                            </div>\n                          )}\n                        </div>\n                        <button\n                          className=\"btn btn-rounded btn-primary btn-block mt-2\"\n                          type=\"submit\"\n                        >\n                          Sign In\n                        </button>\n                      </form>\n                    )}\n                  </Formik>\n\n                  <div className=\"mt-3 text-center\">\n                    <Link to=\"/session/forgot-password\" className=\"text-muted\">\n                      <u>Forgot Password?</u>\n                    </Link>\n                  </div>\n                </div>\n              </div>\n              <div\n                className=\"col-md-6 text-center \"\n                style={{\n                  backgroundSize: \"cover\",\n                  backgroundImage: \"url(/assets/images/photo-long-3.jpg)\"\n                }}\n              >\n                <div className=\"pr-3 auth-right\">\n                  <Link\n                    to=\"/session/signup\"\n                    className=\"btn btn-rounded btn-outline-primary btn-outline-email btn-block btn-icon-text\"\n                  >\n                    <i className=\"i-Mail-with-At-Sign\"></i> Sign up with Email\n                  </Link>\n\n                  <Button className=\"btn btn-rounded btn-outline-google btn-block btn-icon-text\">\n                    <i className=\"i-Google-Plus\"></i> Sign up with Google\n                  </Button>\n                  <Button className=\"btn btn-rounded btn-block btn-icon-text btn-outline-facebook\">\n                    <i className=\"i-Facebook-2\"></i> Sign up with Facebook\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  loginWithEmailAndPassword: PropTypes.func.isRequired,\n  user: state.user\n});\n\nexport default connect(mapStateToProps, {\n  loginWithEmailAndPassword\n})(Signin);\n","/**\n * Safe chained function\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n *\n * @param {function} functions to chain\n * @returns {function|null}\n */\nfunction createChainedFunction() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  return funcs.filter(function (f) {\n    return f != null;\n  }).reduce(function (acc, f) {\n    if (typeof f !== 'function') {\n      throw new Error('Invalid Argument Type, must only provide functions, undefined, or null.');\n    }\n\n    if (acc === null) return f;\n    return function chainedFunction() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      // @ts-ignore\n      acc.apply(this, args); // @ts-ignore\n\n      f.apply(this, args);\n    };\n  }, null);\n}\n\nexport default createChainedFunction;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport createChainedFunction from './createChainedFunction';\n\nfunction isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\n/**\n * There are situations due to browser quirks or Bootstrap CSS where\n * an anchor tag is needed, when semantically a button tag is the\n * better choice. SafeAnchor ensures that when an anchor is used like a\n * button its accessible. It also emulates input `disabled` behavior for\n * links, which is usually desirable for Buttons, NavItems, DropdownItems, etc.\n */\n\n\nvar SafeAnchor = React.forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'a' : _ref$as,\n      disabled = _ref.disabled,\n      onKeyDown = _ref.onKeyDown,\n      props = _objectWithoutPropertiesLoose(_ref, [\"as\", \"disabled\", \"onKeyDown\"]);\n\n  var handleClick = function handleClick(event) {\n    var href = props.href,\n        onClick = props.onClick;\n\n    if (disabled || isTrivialHref(href)) {\n      event.preventDefault();\n    }\n\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n\n  if (isTrivialHref(props.href)) {\n    props.role = props.role || 'button'; // we want to make sure there is a href attribute on the node\n    // otherwise, the cursor incorrectly styled (except with role='button')\n\n    props.href = props.href || '#';\n  }\n\n  if (disabled) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    onClick: handleClick,\n    onKeyDown: createChainedFunction(handleKeyDown, onKeyDown)\n  }));\n});\nSafeAnchor.displayName = 'SafeAnchor';\nexport default SafeAnchor;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport SafeAnchor from './SafeAnchor';\nvar defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false\n};\nvar Button = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      size = _ref.size,\n      active = _ref.active,\n      className = _ref.className,\n      block = _ref.block,\n      type = _ref.type,\n      as = _ref.as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"size\", \"active\", \"className\", \"block\", \"type\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  var classes = classNames(className, prefix, active && 'active', prefix + \"-\" + variant, block && prefix + \"-block\", size && prefix + \"-\" + size);\n\n  if (props.href) {\n    return /*#__PURE__*/React.createElement(SafeAnchor, _extends({}, props, {\n      as: as,\n      ref: ref,\n      className: classNames(classes, props.disabled && 'disabled')\n    }));\n  }\n\n  if (ref) {\n    props.ref = ref;\n  }\n\n  if (type) {\n    props.type = type;\n  } else if (!as) {\n    props.type = 'button';\n  }\n\n  var Component = as || 'button';\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    className: classes\n  }));\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;","const env = process.env.NODE_ENV;\r\nconst app_mode = env ? env.trim() : \"development\";\r\nconsole.log(\"env\", env, process.env)\r\n\r\nconst environment = {\r\n    development: {\r\n        base_url: 'http://localhost:5000/api',\r\n        base_url_front: ''\r\n    },\r\n    production: {\r\n        base_url: 'https://wex-backend.herokuapp.com/api',\r\n        base_url_front: ''\r\n    }\r\n\r\n}\r\n\r\nexport const APP_ENVIRONMENT = environment[app_mode];","import axios from 'axios';\r\nimport { APP_ENVIRONMENT } from '../environment/environment';\r\n\r\nconst BASE_URL = APP_ENVIRONMENT.base_url;\r\n\r\n\r\nexport const get = async (url, id = null) => {\r\n    let path = `${BASE_URL}/${url}`;\r\n    path = (!id) ? path : `${path}/${id}`;\r\n    return await axios.get(path).then(\r\n        (response) => {\r\n            return response.data;\r\n        }\r\n    ).then(\r\n        (jsonData) => {\r\n            return jsonData\r\n        })\r\n        .catch(\r\n            (error) => {\r\n                const errorResponse = {\r\n                    data: error,\r\n                    message: error.message,\r\n                    requestStatus: false,\r\n                    statusCode: error\r\n                }\r\n                throw errorResponse;\r\n            }\r\n        )\r\n\r\n}\r\n\r\n\r\nexport const post = async (url, data) => {\r\n    const path = `${BASE_URL}/${url}`;\r\n    return await axios.post(path, data).then(\r\n        (response) => { return response.data; }).catch((error) => {\r\n            \r\n            const errorResponse= error.response\r\n            console.log(errorResponse)\r\n            throw errorResponse;\r\n        })\r\n}\r\n\r\nexport const put = async (url, data = null) => {\r\n    const path = `${BASE_URL}/${url}`;\r\n    return await axios.put(path, data).then(\r\n        (response) => { return response.data; }).catch((error) => {\r\n            const errorResponse= error.response\r\n            throw errorResponse;\r\n        }\r\n        )\r\n\r\n}\r\n\r\nexport const patch = async (url, data = null) => {\r\n    const path = `${BASE_URL}/${url}`;\r\n    return await axios.patch(path, data).then(\r\n        (response) => { return response.data; }).catch((error) => {\r\n            const errorResponse= error.response\r\n            throw errorResponse;\r\n        }\r\n        )\r\n\r\n}\r\n\r\n\r\nexport const del = async (url) => {\r\n    const path = `${BASE_URL}/${url}`;\r\n    return await axios.delete(path).then(\r\n        (response) => { return response.data; }).catch((error) => {\r\n            const errorResponse= error.response\r\n            throw errorResponse;\r\n        }\r\n        )\r\n\r\n}\r\n\r\n\r\nexport const postFile = async (url, file, data = null) => {\r\n    const path = extractDataAsParam(`${BASE_URL}/${url}`, data);\r\n    return await axios.post(path, file, data).then(\r\n        (response) => { return response.data; }).catch((error) => {\r\n            const errorResponse= error.response\r\n            throw errorResponse;\r\n        }\r\n        )\r\n\r\n}\r\n\r\n\r\n// async function post(url, data) {\r\n//     return fetch(path).then(res => res.json()).catch(error => error.json());\r\n// }\r\n\r\n// async function put(url, data) {\r\n//     return fetch(path).then(res => res.json()).catch(error => error.json());\r\n// }\r\n\r\n// async function del(url) {\r\n//     return fetch(path).then(res => res.json()).catch(error => error.json());\r\n// }\r\n\r\n\r\n\r\nfunction extractDataAsParam(path, data = null) {\r\n    if (data) {\r\n        let dataParams = '?';\r\n        let appendment = '';\r\n        for (let key in data) {\r\n            appendment += `${key}=${data[key]}&`;\r\n        }\r\n        path += `${dataParams}${appendment}`;\r\n    }\r\n    return path;\r\n}","import { Component } from 'react';\r\nimport * as apiService from './apiService';\r\n\r\n\r\nexport default class AppMainService extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n     /**\r\n     * \r\n     * --- USERS SECTION HERE ----\r\n     * \r\n     */\r\n\r\n\r\n     /**\r\n      * \r\n      * @param {*} user\r\n      * \r\n      * This method logs a user in \r\n      */\r\n     async logUserIn(user){\r\n        return await apiService.post('users/auth/login', user);\r\n     }\r\n\r\n\r\n     /**\r\n      * This method returns a list of all users\r\n      */\r\n     async getAllUsers(){\r\n        const url = 'users';\r\n        return await apiService.get(url);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n     * @param {*} userData \r\n     * this method creates a new user\r\n     */\r\n    async createUser(userData){\r\n        const url = 'users/';\r\n        return await apiService.post(url,userData);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {*} user \r\n     * @param {*} id \r\n     * This method updates a user\r\n     */\r\n    async updateUser(user, id){\r\n        const url =`users/${id}/`;\r\n        return await apiService.put(url,user);\r\n\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {*} user\r\n     * This method deletes a user\r\n     */\r\n    async deleteUser(user){\r\n        const url = `users/${user._id}`\r\n        return await apiService.del(url);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {*} user \r\n     * This method toggles a user\r\n     */\r\n    async toggleUser(user){\r\n        user.status = !user.status\r\n      return this.updateUser(user, user._id);\r\n    }\r\n\r\n    /**\r\n      * This method returns a user by its slug\r\n      * \r\n      */\r\n     async getUserBySlug(userSlug){\r\n        const url = `users/${userSlug}`;\r\n        return await apiService.get(url);\r\n    }\r\n\r\n    \r\n\r\n\r\n\r\n    \r\n    /**\r\n     * \r\n     * --- ROLES SECTION HERE ----\r\n     * \r\n     */\r\n\r\n\r\n     /**\r\n      * This method returns a list of all roles\r\n      */\r\n    async getAllRoles(){\r\n        const url = 'roles';\r\n        return await apiService.get(url);\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n     * @param {*} roleData \r\n     * this method creates a new role\r\n     */\r\n    async createRole(roleData){\r\n        const url = 'roles/';\r\n        return await apiService.post(url,roleData);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {*} role \r\n     * @param {*} id \r\n     * This method updates a role\r\n     */\r\n    async updateRole(role, id){\r\n        const url =`roles/${id}/`;\r\n        return await apiService.put(url,role);\r\n\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {*} role\r\n     * This method deletes a role\r\n     */\r\n    async deleteRole(role){\r\n        const url = `roles/${role._id}`\r\n        return await apiService.del(url);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {*} role \r\n     * This method toggles a role\r\n     */\r\n    async toggleRole(role){\r\n        role.status = !role.status\r\n      return this.updateRole(role, role._id);\r\n    }\r\n\r\n    /**\r\n      * This method returns a role by its slug\r\n      * \r\n      */\r\n     async getRoleBySlug(roleSlug){\r\n        const url = `roles/${roleSlug}`;\r\n        return await apiService.get(url);\r\n    }\r\n\r\n\r\n\r\n\r\n     /**\r\n     * \r\n     * --- CATEGORIES SECTION HERE ----\r\n     * \r\n     */\r\n\r\n\r\n     /**\r\n      * This method returns a list of all categories\r\n      */\r\n     async getAllCategories(){\r\n        const url = 'categories';\r\n        return await apiService.get(url);\r\n    }\r\n\r\n\r\n    \r\n    \r\n\r\n    /**\r\n     * \r\n     * @param {*} categoryData \r\n     * this method creates a new category\r\n     */\r\n    async createCategory(categoryData){\r\n        const url = 'categories/';\r\n        return await apiService.post(url,categoryData);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {*} category \r\n     * @param {*} id \r\n     * This method updates a category\r\n     */\r\n    async updateCategory(category, id){\r\n        const url =`categories/${id}/`;\r\n        return await apiService.put(url,category);\r\n\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {*} category\r\n     * This method deletes a category\r\n     */\r\n    async deleteCategory(category){\r\n        const url = `categories/${category._id}`\r\n        return await apiService.del(url);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {*} category \r\n     * This method toggles a category\r\n     */\r\n    async toggleCategory(category){\r\n        category.status = !category.status\r\n      return this.updateCategory(category, category._id);\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * \r\n     * TASKS SECTION --------\r\n     * \r\n     */\r\n      /**\r\n      * This method returns a list of all categories\r\n      */\r\n     async getAllTasks(){\r\n        const url = 'tasks';\r\n        return await apiService.get(url);\r\n    }\r\n\r\n}","import {\r\n    NotificationManager\r\n  } from \"react-notifications\";\r\n\r\n\r\nexport default class AppNotification {\r\n    constructor(props){\r\n        const notificationType = props.type;\r\n        const timeOut = props.timeOut || 10000;\r\n        const message = props.msg\r\n        const title = notificationType;\r\n          NotificationManager[notificationType](\r\n              message,\r\n              title,\r\n              timeOut\r\n            );\r\n        }\r\n\r\n\r\n        \r\n         \r\n  }\r\n\r\n   \r\n"],"sourceRoot":""}